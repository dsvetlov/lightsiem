- name: Place Elasticsearch repo file
  copy: src=repos/elastico.repo dest=/etc/yum.repos.d/

- name: Import GPG key
  command: rpm --import https://packages.elastic.co/GPG-KEY-elasticsearch

- name: Install packages
  yum: name={{item}} state=present
  with_items:
    - elasticsearch
    - java
    - wget
    - epel-release
    - logstash
    - dnsmasq
    - kibana

- name: Add software to autostart to autostart
  command: systemctl enable {{item}}
  with_items:
    - elasticsearch
    - logstash
    - dnsmasq
    - kibana
  notify:
    - restart elasticsearch
    - restart logstash
    - restart kibana
    - restart dnsmasq

- name: Add dnsmasq config
  copy: src=dnsmasq.conf dest=/etc/dnsmasq.d/lightsiem.conf
  tags:
    - configuration
  notify:
    - restart dnsmasq

- name: Add Logstash configs
  copy: src=logstash-conf.d/{{item}} dest=/etc/logstash/conf.d/
  with_items:
    - 40-cisco.conf
  tags:
    - configuration
  notify:
    - restart logstash

- name: Create patterns directory
  file: path=/opt/lightsiem/patterns state=directory

- name: Place Logstash patterns
  copy: src=logstash-patterns/{{item}} dest=/opt/lightsiem/patterns/
  with_items:
    - cisco.pattern
  notify:
        - restart logstash
  tags:
        - configuration

- name: Open ports in firewalld
  firewalld: port={{item}} permanent=true state=enabled
  with_items:
    - 5601/tcp
    - 9020/udp
  tags:
        - configuration
  notify:
        - restart firewalld
  ignore_errors: yes

#- name: Create directory for LightIEM components
#  file: path=/opt/lightsiem/ state=directory mode=0755
#
#- name: Create directory for Logstash patterns
#  file: path=/opt/lightsiem/patterns state=directory mode=0755
#
#
#- name: Place Kibana 4 config
#  copy: src=kibana-config.yml dest=/opt/lightsiem/kibana4/config/kibana.yml
#  tags:
#        - configuration
#
#- name: Open port in firewalld for Kibana 4
#  firewalld: port=80/tcp permanent=true state=enabled
#  ignore_errors: yes
#  tags:
#        - configuration
#  notify:
#        - restart firewalld
#
#- name: Place systemd unit file for Kibana
#  copy: src=kibana.service dest=/etc/systemd/system/kibana.service
#  ignore_errors: yes
#
#- name: AutoStart Kibana
#  command: systemctl enable kibana.service
#  ignore_errors: yes
#
#- name: Start Kiabana
#  command: systemctl start kibana.service
#  ignore_errors: yes
#
#- name: Place Logstash input config for Cisco
#  copy: src=logstash-conf.d/40-cisco.conf dest=/etc/logstash/conf.d/40-cisco.conf
#  notify:
#        - restart logstash
#  tags:
#        - configuration
#
#- name: Place Logstash patterns file for Cisco
#  copy: src=logstash-patterns/cisco.pattern dest=/opt/lightsiem/patterns/cisco
#  notify:
#        - restart logstash
#  tags:
#        - configuration
#
#
#- name: Open port in firewalld for Logstash Cisco input
#  firewalld: port=9020/udp permanent=true state=enabled
#  ignore_errors: yes
#  tags:
#        - configuration
#  notify:
#        - restart firewalld
#
#- name: Place Logstash common config
#  copy: src=logstash-conf.d/99-output.conf dest=/etc/logstash/conf.d/99-output.conf
#  notify:
#        - restart logstash
#  tags:
#        - configuration
#
#- name: Place Logstash output config for elasticsearch
#  copy: src=logstash-conf.d/95-common.conf dest=/etc/logstash/conf.d/95-common.conf
#  notify:
#        - restart logstash
#  tags:
#        - configuration
#
#- name: AutoStart dnsmasq
#  command: chkconfig dnsmasq on
#
#- name: Start dnsmasq
#  command: service dnsmasq start
#
#- name: Install packages
#  yum: name={{item}} state=present
#  with_items:
#        - java
#        - http://download.elastic.co/logstash/logstash/packages/centos/logstash-1.5.0-1.noarch.rpm
#        - https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.4.4.noarch.rpm
#        - epel-release
#        - nodejs
#        - unzip
#        - npm
#        - dnsmasq
#
#- name: AutoStart dnsmasq
#  command: chkconfig dnsmasq on
#
#- name: Start dnsmasq
#  command: service dnsmasq start
#
#- name: Open port in firewalld for Logstash OSSEC input
#  firewalld: port=9000/udp permanent=true state=enabled
#  ignore_errors: yes
#  tags:
#        - configuration
#  notify:
#        - restart firewalld
#
#- name: Place Logstash patterns file for ossec
#  copy: src=ossec.pattern dest=/opt/logstash/vendor/bundle/jruby/1.9/gems/logstash-patterns-core-0.1.10/patterns/ossec
#  notify:
#        - restart logstash
#  tags:
#        - configuration
#
#- name: Open port in firewalld for Logstash Snort input
#  firewalld: port=9010/udp permanent=true state=enabled
#  ignore_errors: yes
#  tags:
#        - configuration
#  notify:
#        - restart firewalld
#
#- name: Open port in firewalld for Logstash Snort full via lumberjack input
#  firewalld: port=9011/tcp permanent=true state=enabled
#  ignore_errors: yes
#  tags:
#        - configuration
#  notify:
#        - restart firewalld
#
#- name: Place Logstash patterns file for snort
#  copy: src=snort.pattern dest=/opt/logstash/vendor/bundle/jruby/1.9/gems/logstash-patterns-core-0.1.10/patterns/snort
#  notify:
#        - restart logstash
#  tags:
#        - configuration
#
#- name: Place Logstash patterns file for IDMEF
#  copy: src=idmef.pattern dest=/opt/logstash/vendor/bundle/jruby/1.9/gems/logstash-patterns-core-0.1.10/patterns/idmef
#  notify:
#        - restart logstash
#  tags:
#        - configuration
#
#- name: Place Logstash patterns file for Cisco
#  copy: src=cisco.pattern dest=/opt/logstash/vendor/bundle/jruby/1.9/gems/logstash-patterns-core-0.1.10/patterns/cisco
#  notify:
#        - restart logstash
#  tags:
#        - configuration
#
#- name: Place Logstash input config for ossec
#  copy: src=20-ossec.conf dest=/etc/logstash/conf.d/20-ossec.conf
#  notify:
#        - restart logstash
#  tags:
#        - configuration
#
#- name: Place Logstash input config for snort
#  copy: src=30-snort.conf dest=/etc/logstash/conf.d/30-snort.conf
#  notify:
#        - restart logstash
#  tags:
#        - configuration
#
#- name: Place Logstash input config for Cisco
#  copy: src=40-cisco.conf dest=/etc/logstash/conf.d/40-cisco.conf
#  notify:
#        - restart logstash
#  tags:
#        - configuration
#
#- name: Open port in firewalld for Logstash Cisco input
#  firewalld: port=9020/udp permanent=true state=enabled
#  ignore_errors: yes
#  tags:
#        - configuration
#  notify:
#        - restart firewalld
#
#- name: Place Logstash common config
#  copy: src=95-common.conf dest=/etc/logstash/conf.d/95-common.conf
#  notify:
#        - restart logstash
#  tags:
#        - configuration
#
#- name: Place Logstash output config for email
#  copy: src=98-mail.conf dest=/etc/logstash/conf.d/98-mail.conf
#  notify:
#        - restart logstash
#  tags:
#        - configuration
#
#- name: Place Logstash output config for elasticsearch
#  copy: src=99-output.conf dest=/etc/logstash/conf.d/99-output.conf
#  notify:
#        - restart logstash
#  tags:
#        - configuration
#
#- name: Place Logstash template for elasticsearch output
#  copy: src=elasticsearch-template.json dest=/opt/logstash/vendor/bundle/jruby/1.9/gems/logstash-output-elasticsearch-0.2.4-java/lib/logstash/outputs/elasticsearch/elasticsearch-template.json
#  notify:
#        - restart logstash
#  tags:
#        - configuration
#
#- name: Add logstash to autostart
#  command: chkconfig logstash on
#
#- name: Place Elasticsearch config file
#  copy: src=elasticsearch.yml dest=/etc/elasticsearch/elasticsearch.yml
#  notify:
#        - restart elasticsearch
#  tags:
#        - configuration
#
#- name: Add elasticsearch to autostart
#  command: chkconfig elasticsearch on
#
#- name: Download Kibana Authentication Proxy
#  get_url: url=https://github.com/fangli/kibana-authentication-proxy/archive/master.zip dest=/tmp/kap.zip
#
#- name: Unzip Kibana Authentication Proxy
#  unarchive: src=/tmp/kap.zip dest=/opt copy=no
#
#- name: Rename Kibana Authentication Proxy folder
#  shell: rm -rf /opt/kibana-authentication-proxy/ && mv /opt/kibana-authentication-proxy-master /opt/kibana-authentication-proxy
#
#- name: Download Kibana 3
#  get_url: url=https://github.com/elasticsearch/kibana/archive/kibana3.zip dest=/tmp/kibana.zip
#
#- name: Unzip Kibana 3
#  unarchive: src=/tmp/kibana.zip dest=/opt/kibana-authentication-proxy/ copy=no
#
#- name: Rename Kibana 3 folder
#  shell: rm -rf /opt/kibana-authentication-proxy/kibana && mv /opt/kibana-authentication-proxy/kibana-kibana3 /opt/kibana-authentication-proxy/kibana
#
#- name: Install Express module for Node.js
#  shell: cd /opt/kibana-authentication-proxy/ && npm install express
#
#- name: A litle patch Kibana
#  copy: src=module.html dest=/opt/kibana-authentication-proxy/kibana/src/app/panels/table/module.html
#  notify:
#        - restart kibana
#
#- name: Open port in firewalld for Kibana
#  firewalld: port=80/tcp permanent=true state=enabled
#  ignore_errors: yes
#  tags:
#        - configuration
#  notify:
#        - restart firewalld
#
#- name: Place systemd unit file for Kibana
#  copy: src=kibana.service dest=/etc/systemd/system/kibana.service
#  ignore_errors: yes
#  tags: configuration
#
#- name: Place config for Kibana Authentication Proxy
#  copy: src=config.js dest=/opt/kibana-authentication-proxy/config.js
#  notify:
#        - restart kibana
#  tags: configuration
#
#- name: Place OSSEC dashboard
#  copy: src=ossec.json dest=/opt/kibana-authentication-proxy/kibana/src/app/dashboards/default.json
#  tags: configuration
#
#- name: Place OSSEC FIM dashboard
#  copy: src=fim.json dest=/opt/kibana-authentication-proxy/kibana/src/app/dashboards/fim.json
#  tags: configuration
#  notify:
#        - restart kibana
#
#- name: Place Cisco dashboard
#  copy: src=cisco.json dest=/opt/kibana-authentication-proxy/kibana/src/app/dashboards/cisco.json
#  tags: configuration
#  notify:
#        - restart kibana
#
#- name: AutoStart Kibana
#  command: systemctl enable kibana.service
#  ignore_errors: yes
#
#- name: Start Kiabana
#  command: systemctl start kibana.service
#  ignore_errors: yes

#- name: Install search-guard-ssl
#  command: /usr/share/elasticsearch/bin/plugin install com.floragunn/search-guard-ssl/2.3.1.8.1
#  tags: configuration security

#- name: Install search-guard-2
#  command: /usr/share/elasticsearch/bin/plugin install com.floragunn/search-guard-2/2.3.1.0-beta1
#  tags: configuration security

#- name: Place search-guard-ssl pki scripts
#  copy: src=roles/elk/files/search-guard-ssl-pki-scripts/ dest=/tmp/
#  tags: configuration security

#- name: Create your own Root CA, Generate Keystores, Client node cert
#  shell: cd /tmp/ && chmod +x ./clean.sh && chmod +x ./gen_root_ca.sh && chmod +x ./gen_node_cert.sh &&  chmod +x ./gen_client_node_cert.sh  &&  chmod +x ./apply_config.sh &&  chmod +x ./example.sh && ./example.sh
#  tags: configuration security

#- name: Copy keystores
#  shell: cd /tmp/ && cp node-{{node_name}}-keystore.jks /etc/elasticsearch && cp node-{{node_name}}-keystore.p12 /etc/elasticsearch && cp truststore.jks /etc/elasticsearch
#  notify:
#       - restart elasticsearch
#       - restart kibana
#       - restart logstash
#  tags: configuration security

#- name: Add netty-tcnative to search-guard plugin
#  copy: src=/tmp/netty-tcnative-1.1.33.Fork13-linux-x86_64.jar dest=/usr/share/elasticsearch/plugins/search-guard-ssl/
#  tags: configuration security

#- name: Apply sg_config
#	 shell: chmod +x /usr/share/elasticsearch/plugins/search-guard-2/tools/sgadmin.sh && /tmp/apply_config.sh
#  notify:
#       - restart elasticsearch
#       - restart kibana
#       - restart logstash
#	 tags: configuration security
