input {
	beats {
                port => 9002
                type => ossec_full
                #For users, who experiencing problems with encoding. Uncomment line bellow and place apropriate charset.
                #codec => plain { charset => "Windows-1251" }
        }
#stdin {
#               type => ossec_full
              
#                }

        #Stdin input for debug purposes
#        stdin {
#                type => ossec_full
#
#                codec => multiline {
#                      pattern => "^\*\*"
#                      negate => true
#                      what => "previous"
                       #For users, who experiencing problems with encoding. Uncomment line bellow and place apropriate charset.
                       #codec => plain { charset => "Windows-1251" }
#                }
#        }
        
        #lumberjack {
        #port => 9001
        #ssl_certificate => "/etc/logstash/ssl/logstash-forwarder.crt"
        #ssl_key => "/etc/logstash/ssl/logstash-forwarder.key"
        #type => ossec_full

        #        codec => multiline {
        #              pattern => "^\*\*"
        #              negate => true
        #              what => "previous"
        #        }
        #}

}


filter {


  if [type] == "ossec_full"
  {

            grok {
                                        #** Alert 1433185454.285: - pam,syslog,authentication_success,
              patterns_dir => ["/opt/lightsiem/patterns/"]
#, "/opt/logstash/vendor/bundle/jruby/1.9/gems/logstash-patterns-core-2.0.5/patterns/"]
              match => { "message" => "%{OSSEC_MESSAGE_FULL}" }
            }
            
   date {       
      match => ["[Alert][CreateTime]",  "UNIX"]
      target => "[Alert][CreateTime]"
  }
 mutate {
                add_field => [ "[Alert][Analyzer][Name]", "ossec" ]
                add_field => [ "[Alert][Analyzer][Node][Name]", "%{host}" ]
               

        }


 }

#  if [type] == "ossec" {

 #   grok {
 #     patterns_dir => ["/opt/lightsiem/patterns/", "/opt/logstash/vendor/bundle/jruby/1.9/gems/logstash-patterns-core-2.0.5/patterns/"]
  #    match => { "message" => "%{IDMEF_MESSAGE}" }
   # }

   # if ![syslogbase] { mutate { add_field => { "syslogbase" => "" } } }
   # if ![program] { mutate { add_field => { "program" => "" } } }
   # if ![timestamp] { mutate { add_field => { "timestamp" => "" } } }

   # date {
        #Apr 19 11:55:57
    #    match => ["[Alert][CreateTime]", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss"]
     #   target => "[Alert][CreateTime]"
   # }

   # mutate {
#	add_field => [ "[Alert][Analyzer][Node][Address]", "%{host}" ]
#        add_tag => ["OSSEC"]
#        remove_field => [ "type" ]
#	remove_field => [ "logsource" ]
#	add_field => [ "[Alert][Source][Process][Pid]", "%{pid}" ]
#	remove_field => [ "pid" ]
#	add_field => [ "[Alert][Source][Process][Name]", "%{program}" ]
#	remove_field => [ "program" ]
#	add_field => [ "[Alert][Analyzer][rawmessage]", "%{syslogbase} %{syslog_message}" ]
#	add_field => [ "[Alert][DetectTime]", "%{timestamp}" ]



#	remove_field => [ "syslog_message" ]
#	remove_field => [ "syslogbase" ]

#    }
#  }
  
  #if [type] in ["ossec", "ossec_full"]
 #{

        #Apr 19 11:55:57



#    mutate {
#                add_field => [ "[Alert][Analyzer][Level][Normalized]", "%{[Alert][Analyzer][Level][Origin]}" ]

	       # convert => [ "[Alert][Analyzer][Level]", "integer" ]
#             convert => [ "[Alert][Analyzer][Level][Origin]", "integer" ]   
#            convert => [ "[Alert][Analyzer][Level][Normalized]", "integer" ]

#   }
#  }

}

